USE FILEANDSERVE
BEGIN TRAN

-- SYSTEM VARIABLES - DO NOT CHANGE
 DECLARE @NODEID INT
 DECLARE @TABLEFEESCHEDULECODE TABLE
   (
   CODE        VARCHAR(50),
   DESCRIPTION VARCHAR(100),
   NEWAMOUNT   FLOAT
   )
 DECLARE @TEMPNODEID INT
 DECLARE @TEMPCODEID INT
 DECLARE @TEMPCODE VARCHAR(50)
 DECLARE @TEMPDESCRIPTION VARCHAR(100)
 DECLARE @TEMPNEWFEEAMOUNT FLOAT
 DECLARE @SAVECHANGES VARCHAR(3)

/*
INSTRUCTIONS
 THIS SCRIPT WILL ALLOW YOU TO UPDATE THE FEE AMOUNT FOR A GIVEN SET OF FEE SCHEDULE CODE PER A GIVEN NODE.

 USER PARAMETERS:
  @SAVECHANGES    - REQUIRED: YES - SETTING THIS VALUE TO YES WILL SAVE YOUR CHANGES.  SETTING IT TO NO WILL NOT SAVE YOUR CHANGES.
  @NODEID      - REQUIRED: YES - THIS IS WHERE YOU WILL DETERMINE WHICH LOCATION YOUR CHANGES WILL BE MADE AT.
  @@TABLEFEESCHEDULECODE  - REQUIRED: YES - THIS VARIABLE IS REALLY A TABLE THAT CONTAINS 3 ITEMS.  YOU MAY ALSO INCLUDE MORE THAN ONE INSERT LINE TO ACCOMMODATE MORE THAN ONE FEE SCHEDULE CODE
              1. CODE    - REQUIRED: YES - THIS IS THE FEE SCHEDULE CODE.
              2. DESCRIPTION  - REQUIRED: YES - THIS IS THE FEE SCHEDULE DESCRIPTION.
              3. NEW FEE AMOUNT - REQUIRED: YES - THIS WILL BE THE NEW FEE AMOUNT.

              EXAMPLE
               INSERT INTO @TABLEFEESCHEDULECODE VALUES ('71895','ABSTRACT OF JUDGMENT',8)

SUPPORT QUERY:
 THIS SCRIPT WILL ASSIST IN LOCATING THE PROPER NODEID FOR THE LOCATION YOU WANT TO UPDATE.

 USE FILEANDSERVE SELECT * FROM CONFIG.ORGCHART WHERE ORGCHARTNAME LIKE '%pecos%'
 USE FILEANDSERVE SELECT * FROM CONFIG.VWFEESCHEDULECODE WHERE NODEID = 11620 order by code
*/





-- USER PARAMETERS  - YOU MAY MAKE CHANGES HERE.
 SET @SAVECHANGES       = 'no'
 SET @NODEID         = 6920
 INSERT INTO @TABLEFEESCHEDULECODE VALUES ('CMScode','FeeScheduledesc',###)  --to update multiple fees, copy this Insert and replace with correct values.
	INSERT INTO @TABLEFEESCHEDULECODE VALUES ('CMScode','FeeScheduledesc',###)
	INSERT INTO @TABLEFEESCHEDULECODE VALUES ('CMScode','FeeScheduledesc',###)

--INSERT INTO @TABLEFEESCHEDULECODE VALUES ('$0','$1',$2)




--         *** DO NOT CHANGE ANYTHING BELOW THIS LINE ***

-- THIS PROVIDS A REPORT OF THE FEE AMOUNT BEFORE THE CHANGE.
 SELECT O.ORGCHARTNAME,
     FS.CODE,
     FS.DESCRIPTION,
     FS.AMOUNT AS 'ORIGINAL FEE AMOUNT'
 FROM   CONFIG.VWFEESCHEDULECODE FS
     JOIN CONFIG.ORGCHART O
    ON FS.NODEID = O.NODEID
     JOIN @TABLEFEESCHEDULECODE T
    ON FS.CODE = T.CODE
    AND FS.DESCRIPTION = T.DESCRIPTION
 WHERE  FS.NODEID = @NODEID
 ORDER BY FS.CODE, FS.DESCRIPTION

-- THIS CURSOR WILL LOOP THROUGH EACH OF THE @TABLEFEESCHEDULECODE TABLE.
 DECLARE DB_CURSORFEESCHEDULE CURSOR FOR
   SELECT NODEID,
    CODEID,
    FS.CODE,
    FS.DESCRIPTION
   FROM   CONFIG.VWFEESCHEDULECODE FS
    JOIN @TABLEFEESCHEDULECODE T
      ON FS.CODE = T.CODE
      AND FS.DESCRIPTION = T.DESCRIPTION
   WHERE  NODEID = @NODEID

 OPEN DB_CURSORFEESCHEDULE

 FETCH NEXT FROM DB_CURSORFEESCHEDULE INTO @TEMPNODEID, @TEMPCODEID, @TEMPCODE,
 @TEMPDESCRIPTION

 WHILE @@FETCH_STATUS = 0
   BEGIN
    SET @TEMPNEWFEEAMOUNT = (SELECT NEWAMOUNT
           FROM   @TABLEFEESCHEDULECODE
           WHERE  CODE = @TEMPCODE
            AND DESCRIPTION = @TEMPDESCRIPTION)

    UPDATE CONFIG.CODENODEEXT_FEESCHEDULECODE
    SET    AMOUNT = @TEMPNEWFEEAMOUNT
    WHERE  NODEID = @TEMPNODEID
     AND CODEID = @TEMPCODEID

    FETCH NEXT FROM DB_CURSORFEESCHEDULE INTO @TEMPNODEID, @TEMPCODEID,
    @TEMPCODE, @TEMPDESCRIPTION
   END

 CLOSE DB_CURSORFEESCHEDULE

 DEALLOCATE DB_CURSORFEESCHEDULE

-- THIS PROVIDS A REPORT OF THE FEE AMOUNT AFTER THE CHANGE.
 SELECT O.ORGCHARTNAME,
     FS.CODE,
     FS.DESCRIPTION,
     FS.AMOUNT AS 'NEW FEE AMOUNT'
 FROM   CONFIG.VWFEESCHEDULECODE FS
     JOIN CONFIG.ORGCHART O
    ON FS.NODEID = O.NODEID
     JOIN @TABLEFEESCHEDULECODE T
    ON FS.CODE = T.CODE
    AND FS.DESCRIPTION = T.DESCRIPTION
 WHERE  FS.NODEID = @NODEID
 ORDER BY FS.CODE, FS.DESCRIPTION

 IF ( @SAVECHANGES = 'YES' )
   BEGIN
    SELECT 'CHANGES WERE SAVED'

    COMMIT
   END
 ELSE
   BEGIN
    SELECT 'CHANGES WERE NOT SAVED.'

    ROLLBACK
   END